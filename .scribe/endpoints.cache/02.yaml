## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Survey Management'
description: |-

  APIs for managing surveys
endpoints:
  -
    httpMethods:
      - GET
    uri: api/surveys
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'List Surveys'
      description: 'Get a paginated list of surveys.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Customer Satisfaction Survey",
                      "status": "active",
                      "created_at": "2025-07-02T21:28:00.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Employee Feedback Survey",
                      "status": "draft",
                      "created_at": "2025-07-01T10:00:00.000000Z"
                  }
              ],
              "links": {
                  "first": "/api/surveys?page=1",
                  "last": "/api/surveys?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "/api/surveys",
                  "per_page": 15,
                  "to": 2,
                  "total": 2
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/surveys/active
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Active Surveys'
      description: 'Get all currently active surveys.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Customer Satisfaction Survey",
                      "status": "active",
                      "created_at": "2025-07-02T21:28:00.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Employee Feedback Survey",
                      "status": "draft",
                      "created_at": "2025-07-01T10:00:00.000000Z"
                  }
              ],
              "links": {
                  "first": "/api/surveys?page=1",
                  "last": "/api/surveys?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "/api/surveys",
                  "per_page": 15,
                  "to": 2,
                  "total": 2
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/surveys/my
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get My Surveys'
      description: 'Get surveys created by the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Customer Satisfaction Survey",
                      "status": "active",
                      "created_at": "2025-07-02T21:28:00.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Employee Feedback Survey",
                      "status": "draft",
                      "created_at": "2025-07-01T10:00:00.000000Z"
                  }
              ],
              "links": {
                  "first": "/api/surveys?page=1",
                  "last": "/api/surveys?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "/api/surveys",
                  "per_page": 15,
                  "to": 2,
                  "total": 2
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/status/{status}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Surveys by Status'
      description: 'Get surveys filtered by status.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status to filter by.'
        required: true
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      status: active
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Customer Satisfaction Survey",
                      "status": "active",
                      "created_at": "2025-07-02T21:28:00.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Employee Feedback Survey",
                      "status": "draft",
                      "created_at": "2025-07-01T10:00:00.000000Z"
                  }
              ],
              "links": {
                  "first": "/api/surveys?page=1",
                  "last": "/api/surveys?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "/api/surveys",
                  "per_page": 15,
                  "to": 2,
                  "total": 2
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/template/{templateId}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Surveys by Template'
      description: 'Get surveys created from a specific template.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      templateId:
        name: templateId
        description: 'The ID of the template.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      templateId: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "title": "Customer Satisfaction Survey",
                      "status": "active",
                      "created_at": "2025-07-02T21:28:00.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Employee Feedback Survey",
                      "status": "draft",
                      "created_at": "2025-07-01T10:00:00.000000Z"
                  }
              ],
              "links": {
                  "first": "/api/surveys?page=1",
                  "last": "/api/surveys?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "/api/surveys",
                  "per_page": 15,
                  "to": 2,
                  "total": 2
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/surveys
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Survey'
      description: 'Create a new survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the survey. Must not be greater than 255 characters.'
        required: true
        example: 'Customer Satisfaction Survey'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'A brief description of the survey. Must not be greater than 1000 characters.'
        required: false
        example: 'Please provide your valuable feedback.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status of the survey.'
        required: true
        example: draft
        type: string
        enumValues:
          - draft
          - active
          - archived
        exampleWasSpecified: false
        nullable: false
        custom: []
      template_id:
        name: template_id
        description: 'ID of the template to base this survey on. Must be at least 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      template_version_id:
        name: template_version_id
        description: 'ID of the specific template version to use. Must be at least 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings:
        name: settings
        description: 'Survey settings (anonymous, complexity, theming, etc.).'
        required: false
        example:
          anonymous: true
          multiple_responses: false
          ui_complexity_level: basic
          theme:
            primary_color: '#3B82F6'
            font: Roboto
            logo_media_id: 1
            background_color: '#F9FAFB'
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.anonymous:
        name: settings.anonymous
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.multiple_responses:
        name: settings.multiple_responses
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.ui_complexity_level:
        name: settings.ui_complexity_level
        description: ''
        required: false
        example: basic
        type: string
        enumValues:
          - basic
          - intermediate
          - advanced
        exampleWasSpecified: false
        nullable: true
        custom: []
      expires_at:
        name: expires_at
        description: 'Survey expiration date. Must be a valid date. Must be a date after <code>now</code>.'
        required: false
        example: '2024-12-31 23:59:59'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_responses:
        name: max_responses
        description: 'Maximum number of responses allowed. Must be at least 1. Must not be greater than 1000000.'
        required: false
        example: 1000
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme:
        name: settings.theme
        description: ''
        required: false
        example:
          primary_color: '#3B82F6'
          font: Roboto
          logo_media_id: 1
          background_color: '#F9FAFB'
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.primary_color:
        name: settings.theme.primary_color
        description: 'Must match the regex /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.'
        required: false
        example: '#3B82F6'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.font:
        name: settings.theme.font
        description: ''
        required: false
        example: Roboto
        type: string
        enumValues:
          - Arial
          - Georgia
          - Lato
          - Roboto
          - Verdana
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.logo_media_id:
        name: settings.theme.logo_media_id
        description: 'The <code>id</code> of an existing record in the media table.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.logo_placement:
        name: settings.theme.logo_placement
        description: ''
        required: false
        example: bottom
        type: string
        enumValues:
          - top
          - bottom
          - top-left
          - top-right
          - bottom-left
          - bottom-right
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.background_color:
        name: settings.theme.background_color
        description: 'Must match the regex /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.'
        required: false
        example: '#F9FAFB'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Customer Satisfaction Survey'
      description: 'Please provide your valuable feedback.'
      status: draft
      template_id: 1
      template_version_id: 1
      settings:
        anonymous: true
        multiple_responses: false
        ui_complexity_level: basic
        theme:
          primary_color: '#3B82F6'
          font: Roboto
          logo_media_id: 1
          background_color: '#F9FAFB'
          logo_placement: bottom
      expires_at: '2024-12-31 23:59:59'
      max_responses: 1000
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Survey'
      description: 'Get the details of a specific survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/surveys/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Survey'
      description: 'Update the details of a specific survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Survey title. Must not be greater than 255 characters.'
        required: false
        example: 'Updated Customer Satisfaction Survey 2024'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Survey description.'
        required: false
        example: 'An updated comprehensive survey to measure customer satisfaction levels'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'Survey status.'
        required: false
        example: active
        type: string
        enumValues:
          - draft
          - active
          - archived
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings:
        name: settings
        description: 'Survey settings (anonymous, complexity, theming, etc.).'
        required: false
        example:
          theme:
            primary_color: '#10B981'
            font: Lato
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.anonymous:
        name: settings.anonymous
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.multiple_responses:
        name: settings.multiple_responses
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.theme:
        name: settings.theme
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.theme.primary_color:
        name: settings.theme.primary_color
        description: 'Must match the regex /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.'
        required: false
        example: '#2815dF'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.theme.font:
        name: settings.theme.font
        description: ''
        required: false
        example: Arial
        type: string
        enumValues:
          - Arial
          - Georgia
          - Lato
          - Roboto
          - Verdana
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.theme.logo_media_id:
        name: settings.theme.logo_media_id
        description: 'The <code>id</code> of an existing record in the media table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      settings.theme.logo_placement:
        name: settings.theme.logo_placement
        description: ''
        required: false
        example: bottom-right
        type: string
        enumValues:
          - top
          - bottom
          - top-left
          - top-right
          - bottom-left
          - bottom-right
        exampleWasSpecified: false
        nullable: false
        custom: []
      settings.theme.background_color:
        name: settings.theme.background_color
        description: 'Must match the regex /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/.'
        required: false
        example: '#2815dF'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated Customer Satisfaction Survey 2024'
      description: 'An updated comprehensive survey to measure customer satisfaction levels'
      status: active
      settings:
        theme:
          primary_color: '#10B981'
          font: Lato
          logo_media_id: 16
          logo_placement: bottom-right
          background_color: '#2815dF'
        anonymous: false
        multiple_responses: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/surveys/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Survey'
      description: 'Delete a specific survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": true, "message": "Survey deleted successfully", "data": null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/surveys/{id}/publish'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Publish Survey'
      description: 'Make a survey active and available for responses.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/surveys/{id}/archive'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive Survey'
      description: 'Archive a survey and stop accepting responses.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/surveys/{id}/duplicate'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Duplicate Survey'
      description: 'Create a copy of an existing survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey to duplicate.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "title": "Customer Satisfaction Survey",
                  "description": "A survey to gather feedback from our customers.",
                  "status": "active",
                  "created_at": "2025-07-02T21:28:00.000000Z",
                  "updated_at": "2025-07-02T21:28:00.000000Z",
                  "pages": [
                      {
                          "id": 1,
                          "title": "Page 1",
                          "order_index": 0
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/{surveyId}/pages'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Survey Pages'
      description: 'Get all pages for a specific survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      surveyId:
        name: surveyId
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      surveyId: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": [
                  {
                      "id": 1,
                      "survey_id": 1,
                      "title": "Page 1",
                      "order_index": 0
                  },
                  {
                      "id": 2,
                      "survey_id": 1,
                      "title": "Page 2",
                      "order_index": 1
                  }
              ]
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/surveys/pages
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Survey Page'
      description: 'Create a new page for a survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      survey_id:
        name: survey_id
        description: 'ID of the survey this page belongs to. Must be at least 1.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Page title. Must not be greater than 255 characters.'
        required: false
        example: 'Personal Information'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_index:
        name: order_index
        description: 'Order index for page positioning. Must be at least 0.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      survey_id: 1
      title: 'Personal Information'
      order_index: 0
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "survey_id": 1,
                  "title": "Page 1",
                  "description": "This is the first page of the survey.",
                  "order_index": 0,
                  "questions": [
                      {
                          "id": 1,
                          "title": "How satisfied are you?",
                          "type": "multiple_choice"
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/pages/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Survey Page'
      description: 'Get the details of a specific survey page.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey page.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "survey_id": 1,
                  "title": "Page 1",
                  "description": "This is the first page of the survey.",
                  "order_index": 0,
                  "questions": [
                      {
                          "id": 1,
                          "title": "How satisfied are you?",
                          "type": "multiple_choice"
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/surveys/pages/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Survey Page'
      description: 'Update the details of a specific survey page.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey page.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Page title. Must not be greater than 255 characters.'
        required: false
        example: 'Updated Personal Information'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_index:
        name: order_index
        description: 'Order index for page positioning. Must be at least 0.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated Personal Information'
      order_index: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "data": {
                  "id": 1,
                  "survey_id": 1,
                  "title": "Page 1",
                  "description": "This is the first page of the survey.",
                  "order_index": 0,
                  "questions": [
                      {
                          "id": 1,
                          "title": "How satisfied are you?",
                          "type": "multiple_choice"
                      }
                  ]
              }
          } 
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/surveys/pages/{id}'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Survey Page'
      description: 'Delete a specific survey page.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey page.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": true, "message": "Survey page deleted successfully", "data": null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/surveys/{surveyId}/pages/reorder'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Reorder Survey Pages'
      description: 'Change the order of pages within a survey.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      surveyId:
        name: surveyId
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      surveyId: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page_ids:
        name: page_ids
        description: 'The <code>id</code> of an existing record in the survey_pages table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page_ids:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": true, "message": "Survey pages reordered successfully", "data": null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/surveys/{id}/responses'
    metadata:
      groupName: 'Survey Management'
      groupDescription: |-

        APIs for managing surveys
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Response Statistics'
      description: 'Get statistical data about survey responses.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the survey.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success": true, "data": {"total_responses": 42, "completion_rate": 85.5}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
